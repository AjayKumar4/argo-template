crds:
  install: true
global:
  domain: {{ .Values.domain }}
configs:
  params:
    server.insecure: true
  cm:
    statusbadge.enabled: true
    kustomize.buildOptions: '--enable-helm --enable-alpha-plugins --enable-exec'
    resource.exclusions: |
      - apiGroups:
          - cilium.io
        kinds:
          - CiliumIdentity
        clusters:
          - "*"
    cmp:
    create: true
    plugins:
      helmfile:
        init:
          command: ["argo-cd-helmfile.sh"]
          args: ["init"]
        generate:
          command: ["argo-cd-helmfile.sh"]
          args: ["generate"]

        # discover is implied with sidecar-style plugins
        # executed in the sidecar and with standard env vars like init and generate
        discover:
          find:
            command: [argo-cd-helmfile.sh, discover]
        parameters:
          #static:
          #- name: values-files
          #  title: Values Files
          #  collectionType: array
          dynamic:
            command: [argo-cd-helmfile.sh, parameters]
        # https://github.com/argoproj/argo-cd/pull/12940
        # https://github.com/travisghansen/argo-cd-helmfile/issues/37
        preserveFileMode: true

  secret:
    argocdServerAdminPassword: {{ .Values.argocdServerAdminPassword }}
    githubSecret: {{ .Values.githubSecret }}
controller:
  metrics:
    enabled: true
    applicationLabels:
      enabled: true
    serviceMonitor: &service-monitor
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
dex:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
redis:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
server:
  allowAnyNamespace: true
  certificate:
    enabled: true
    secretName: argocd-server-tls
    domain:  {{ .Values.domain }}
    issuer:
      group: cert-manager.io
      kind: ClusterIssuer
      name: {{ .Values.issuer_name }}
  ingress:
    enabled: true
    ingressClassName: external
    annotations:
      external-dns.alpha.kubernetes.io/target: {{ .Values.ingress_domain }}
    hostname: {{ .Values.domain }}
  config:
    helm.valuesFileSchemes: >-
      secrets+gpg-import, secrets+gpg-import-kubernetes,
      secrets+age-import, secrets+age-import-kubernetes,
      secrets,secrets+literal,
      https
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
repoServer:
  env:
    - name: XDG_CONFIG_HOME
      value: /.config
    - name: SOPS_AGE_KEY_FILE
      value: /age-secret-keys/key.txt
    - name: PATH
      value: "/custom-tools:$(PATH)"
    - name: HELM_PLUGINS
      value: "/custom-tools/.helm/data/plugins"
  volumes:
    - name: custom-tools
      emptyDir: {}
    - name: age-secret-keys
      secret:
        secretName: age-secret-keys
  volumeMounts:
    - mountPath: /custom-tools
      name: custom-tools
    - mountPath: /age-secret-keys/
      name: age-secret-keys
  initContainers:
    - name: argocd-plugins
      image: ajaykumar4/argocd-plugins
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
  serviceAccount:
    create: true
    name: argocd-repo-server
  rbac:
    - apiGroups:
        - ""
      resources:
        - secrets
      verbs:
        - get
notifications:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor

crds:
  install: true
global:
  domain: {{ .Values.domain }}
configs:
  params:
    server.insecure: true
  cm:
    statusbadge.enabled: true
    kustomize.buildOptions: '--enable-helm'
  secret:
    argocdServerAdminPassword: {{ .Values.argocdServerAdminPassword }}
    githubSecret: {{ .Values.githubSecret }}
controller:
  metrics:
    enabled: true
    applicationLabels:
      enabled: true
    serviceMonitor: &service-monitor
      enabled: true
      additionalLabels:
        release: kube-prometheus-stack
dex:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
redis:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
server:
  allowAnyNamespace: true
  certificate:
    enabled: true
    secretName: argocd-server-tls
    domain:  {{ .Values.domain }}
    issuer:
      group: cert-manager.io
      kind: ClusterIssuer
      name: {{ .Values.issuer_name }}
  ingress:
    enabled: true
    ingressClassName: external
    annotations:
      external-dns.alpha.kubernetes.io/target: {{ .Values.ingress_domain }}
    hostname: {{ .Values.domain }}
  config:
    helm.valuesFileSchemes: >-
      secrets+gpg-import, secrets+gpg-import-kubernetes,
      secrets+age-import, secrets+age-import-kubernetes,
      secrets,secrets+literal,
      https
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
repoServer:
  extraContainers:
  - name: plugin
    image: ajaykumar4/argocd-helmfile
    command: ["/var/run/argocd/argocd-cmp-server"]
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
    env:
    - name: SOPS_AGE_KEY_FILE
      # Multiple keys can be separated by space
      value: /helm-secrets-private-keys/key.txt
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /helm-secrets-private-keys/
      name: helm-secrets-private-keys
  volumes:
  - name: helm-secrets-private-keys
    secret:
      secretName: helm-secrets-private-keys
  metrics:
    enabled: true
    serviceMonitor: *service-monitor
  serviceAccount:
    create: true
    name: argocd-repo-server
  rbac:
    - apiGroups:
        - ""
      resources:
        - secrets
      verbs:
        - get
notifications:
  metrics:
    enabled: true
    serviceMonitor: *service-monitor

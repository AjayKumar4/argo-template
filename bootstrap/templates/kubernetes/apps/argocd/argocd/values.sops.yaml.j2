domain: "argocd.#{ bootstrap_cloudflare.domain }#"
argocdServerAdminPassword: #{ bootstrap_argocd_admin_password }#
githubSecret: #{ bootstrap_github_webhook_token }#
ingress_domain: "external.#{ bootstrap_cloudflare.domain }#"
#% if bootstrap_cloudflare.acme.production %#
issuer_name: letsencrypt-production
#% else %#
issuer_name: letsencrypt-staging
#% endif %#

argo-cd:
  crds:
    install: true
  global:
    domain: "argocd.#{ bootstrap_cloudflare.domain }#"
  configs:
    params:
      server.insecure: true
    cm:
      statusbadge.enabled: true
      resource.exclusions: |
        - apiGroups:
            - cilium.io
          kinds:
            - CiliumIdentity
          clusters:
            - "*"
    secret:
      argocdServerAdminPassword: #{ bootstrap_argocd_admin_password }#
      githubSecret: #{ bootstrap_github_webhook_token }#
  controller:
    metrics:
      enabled: true
      applicationLabels:
        enabled: true
      serviceMonitor: &service-monitor
        enabled: true
        additionalLabels:
          release: kube-prometheus-stack
  dex:
    metrics:
      enabled: true
      serviceMonitor: *service-monitor
  redis:
    metrics:
      enabled: true
      serviceMonitor: *service-monitor
  server:
    allowAnyNamespace: true
    certificate:
      enabled: true
      secretName: argocd-server-tls
      domain:  "argocd.#{ bootstrap_cloudflare.domain }#"
      issuer:
        group: cert-manager.io
        kind: ClusterIssuer
        #% if bootstrap_cloudflare.acme.production %#
        name: letsencrypt-production
        #% else %#
        name: letsencrypt-staging
        #% endif %#
    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.#{ bootstrap_cloudflare.domain }#"
      hostname: "argocd.#{ bootstrap_cloudflare.domain }#"
    metrics:
      enabled: true
      serviceMonitor: *service-monitor
  notifications:
    metrics:
      enabled: true
      serviceMonitor: *service-monitor
